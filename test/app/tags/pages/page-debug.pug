page-debug
  div.f.h-full
    div.w300.h-full.bg-black.text-white
      div.p16 メニュー
    div.overflow-scroll.s-full
      div.container
        div(data-is='module-header')
        //- h1 {title}
        div.mb16
          div isNode: {spat.isNode}
          div isBrowser: {spat.isBrowser}
        div.mb16
          button.button(onclick='{openBeforeunloadTestModal}') beforeunload modal test
        div.mb16
          button.button(onclick='{testPageShowBug}') 別のページの show が発火しないかどうかテスト
        div.mb16
          a.p8(href='/debug/redirect') リダイレクトへのリンク

        div.mb16
          div(data-is='module-note', note-id='1')
          div(data-is='module-note', note-id='2')
          div(data-is='module-note', note-id='3')

        div.p16
          div.s64.bg-red

        div.mb16
          img(src='/images/kenkyo.png')
        
        div.mb16
          ul.ml32
            li(each='{item in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}') item {item}
        
        div.mb16
          ul.ml32
            li(each='{item in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}') item {item}
        
        div.mb16
          ul.ml32
            li(each='{item in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}') item {item}

      div.f.w-full.mb16
        div.button.w-full(each='{button in buttons}', onclick='{onChangeTab}') {button.label}

    style(type='less').
      :scope {
        display: block;
      }

  script.
    this.title = 'Hello, spat with parcel!';
    this.buttons = [
      {label: 'hoge', id: 'hoge'},
      {label: 'fuga', id: 'fuga'},
    ];

    this.preload = async () => {
      var id = 'fuga';

      return {
        id,
      }
    };

    this.head = () => {
      var meta = {
        'hoge': {
          canonical: `hogehoge/hoge`,
        },
        'fuga': {
          canonical: `hogehoge/fuga`,
        },
      }[this.id];
      return {
        title: 'aaaaaaa',
        canonical: meta.canonical,
      };
    };

    this.on('show', async () => {
    });

    //- this.on('beforeunload', e => {
    //-   e.returnValue = 'beforeunload\n遷移しますか？';
    //- });
    
    this.openBeforeunloadTestModal = () => {
      spat.modal.open('spat-modal-alert', {message: 'beforeunload test'}).on('beforeunload', e => {
        e.returnValue = true;
      });
    };


    this.testPageShowBug = () => {
      spat.router.push('/groups/LEzo4c4W2AvRsFL2M3lS');
      spat.router.push('/');
    };

    this.onChangeTab = (e) => {
      this.id = e.item.button.id;
      spat.updateMeta();
      this.update();
    };